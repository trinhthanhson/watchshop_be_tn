@Query(value = """
    SELECT 
        ti.product_id AS watchId,
        b.product_name AS watchName,
        SUM(CASE WHEN t.type_id = 'IMPORT' THEN ti.quantity ELSE 0 END) AS importQty,
        SUM(CASE WHEN t.type_id = 'EXPORT' THEN ti.quantity ELSE 0 END) AS exportQty,
        SUM(CASE WHEN t.created_at < :startDate THEN 
            (CASE WHEN t.type_id = 'IMPORT' THEN ti.quantity ELSE -ti.quantity END)
            ELSE 0 END) AS startQty,
        SUM(CASE WHEN t.created_at <= :endDate THEN 
            (CASE WHEN t.type_id = 'IMPORT' THEN ti.quantity ELSE -ti.quantity END)
            ELSE 0 END) AS endQty
    FROM tn_watchshop.transaction t
    LEFT JOIN tn_watchshop.transaction_detail ti ON t.transaction_id = ti.transaction_id
    LEFT JOIN tn_watchshop.product b ON ti.product_id = b.product_id
    GROUP BY ti.product_id, b.product_name
    """, nativeQuery = true)
List<Object[]> getInventoryReport(@Param("startDate") LocalDate startDate, @Param("endDate") LocalDate endDate);


-- Tồn đầu kỳ
SELECT 
    ti.product_id AS watchId, 
    b.product_name AS watchName, 
    SUM(CASE WHEN ty.type_name = 'IMPORT' THEN ti.quantity ELSE 0 END) - 
    SUM(CASE WHEN ty.type_name = 'EXPORT' THEN ti.quantity ELSE 0 END) AS startQty
FROM 
    tn_watchshop.transaction t
LEFT JOIN 
    tn_watchshop.transaction_detail ti ON t.transaction_id = ti.transaction_id
LEFT JOIN 
    tn_watchshop.product b ON ti.product_id = b.product_id 
JOIN 
    tn_watchshop.type ty ON t.type_id = ty.type_id 
WHERE 
    t.created_at < :startDate
GROUP BY 
    ti.product_id, b.product_name;

-- Tồn cuối kỳ
SELECT 
    ti.product_id AS watchId, 
    b.product_name AS watchName, 
    SUM(CASE WHEN ty.type_name = 'IMPORT' THEN ti.quantity ELSE 0 END) - 
    SUM(CASE WHEN ty.type_name = 'EXPORT' THEN ti.quantity ELSE 0 END) AS endQty
FROM 
    tn_watchshop.transaction t
LEFT JOIN 
    tn_watchshop.transaction_detail ti ON t.transaction_id = ti.transaction_id
LEFT JOIN 
    tn_watchshop.product b ON ti.product_id = b.product_id 
JOIN 
    tn_watchshop.type ty ON t.type_id = ty.type_id 
WHERE 
    t.created_at <= :endDate
GROUP BY 
    ti.product_id, b.product_name;
-- tổng hợp số liệu theo kỳ
SELECT 
    ti.product_id AS watchId,
    b.product_name AS watchName, 
    SUM(ti.quantity) AS totalQty, 
    SUM(ti.price * ti.quantity) AS totalValue
FROM 
    tn_watchshop.transaction t
LEFT JOIN 
    tn_watchshop.transaction_detail ti ON t.transaction_id = ti.transaction_id
LEFT JOIN 
    tn_watchshop.product b ON ti.product_id = b.product_id 
JOIN 
    tn_watchshop.type ty ON t.type_id = ty.type_id 
WHERE 
    ty.type_name = 'IMPORT' 
    AND MONTH(t.created_at) = :inputMonth 
    AND YEAR(t.created_at) = :inputYear
GROUP BY 
    ti.product_id, b.product_name;
